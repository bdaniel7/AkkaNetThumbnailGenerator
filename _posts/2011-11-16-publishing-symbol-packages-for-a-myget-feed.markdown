---
layout: post
title: "Publishing symbol packages for a MyGet feed"
date: 2011-11-16 15:22:00 +0100
comments: true
published: true
categories: ["post"]
tags: ["ASP.NET", "Azure", "CSharp", "General", "NuGet", "Projects", "Software"]
alias: ["/post/2011/11/16/Publishing-symbol-packages-for-a-MyGet-feed.aspx", "/post/2011/11/16/publishing-symbol-packages-for-a-myget-feed.aspx"]
author: Maarten Balliauw
redirect_from:
 - /post/2011/11/16/Publishing-symbol-packages-for-a-MyGet-feed.aspx.html
 - /post/2011/11/16/publishing-symbol-packages-for-a-myget-feed.aspx.html
---
<p><a href="/images/image_148.png"><img style="background-image: none; margin: 0px 5px 5px 0px; padding-left: 0px; padding-right: 0px; display: inline; float: left; padding-top: 0px; border: 0px;" title="MyGet host your NuGet feed server" src="/images/image_thumb_116.png" border="0" alt="MyGet host your NuGet feed server" width="240" height="75" align="left" /></a>Ever since <a href="http://www.nuget.org" target="_blank">NuGet</a> 1.2, there is a great way for NuGet package authors to let their users debug into the package&rsquo;s binaries. With almost no additional effort, package authors can publish their symbols and sources, and package consumers can debug into them from Visual Studio, simply by pushing a symbols package in addition to the standard NuGet package.</p>
<p><a href="/images/image_149.png"><img style="background-image: none; margin: 0px 0px 5px 5px; padding-left: 0px; padding-right: 0px; display: inline; float: right; padding-top: 0px; border: 0px;" title="SymbolSource" src="/images/image_thumb_117.png" border="0" alt="SymbolSource" width="240" height="38" align="right" /></a>Today, we&rsquo;re proud to announce <a href="http://www.myget.org" target="_blank">MyGet</a> has partnered with <a href="http://www.symbolsource.org" target="_blank">SymbolSource.org</a> to offer an easy workflow to publish symbol packages for a private MyGet feed. This means from now on you can publish symbol packages for your private feeds as well!</p>
<p><em>On a sidenote: we're sharing API keys between both services. If you also want to share the same password with both services, simply go to your MyGet profile page and re-enter your password. We'll keep it in sync after that.</em></p>
<h2>Publishing a symbols package for use with MyGet</h2>
<p>As I will assume you are used to publishing packages to NuGet and SymbolSource, here&rsquo;s what changes. First of all, you will require the URLs to which to publish. Log in to <a href="http://www.myget.org/Feed/List" target="_blank">MyGet</a> and browse to your <a href="http://www.myget.org/Feed/List" target="_blank">feed details</a>. The <em>Feed Details </em>tab will give you all the information you need, as you can see in the following screenshot:</p>
<p><a href="/images/image_150.png"><img style="background-image: none; margin: 5px auto; padding-left: 0px; padding-right: 0px; display: block; float: none; padding-top: 0px; border: 0px;" title="image" src="/images/image_thumb_118.png" border="0" alt="image" width="404" height="256" /></a></p>
<p>In short, your feed URL remains the same. If you want to consume your private feed in Visual Studio or using the NuGet Package Manager Console, simply add <a href="http://www.myget.org/F/yourfeedname">http://www.myget.org/F/yourfeedname</a> as the source. The thing that changed is the publish URL: if you want to publish your packages to MyGet, use the URL <a href="http://www.myget.org/F/yourfeedname/api/v1">http://www.myget.org/F/yourfeedname/api/v1</a> as the publish URL. For symbol packages, your URL will be in the form of <a href="http://nuget.gw.symbolsource.org/MyGet/yourfeedname.">http://nuget.gw.symbolsource.org/MyGet/yourfeedname.</a></p>
<p>The publish workflow to publish the SamplePackage.1.0.0.nupkg to a MyGet feed, including symbols, would be issuing the following two commands from the console:</p>
<p>
<div id="scid:9D7513F9-C04C-4721-824A-2B34F0212519:1f47b279-3ff1-432d-8f76-561c5776db14" class="wlWriterEditableSmartContent" style="margin: 0px; display: inline; float: none; padding: 0px;">
<pre style="width: 700px; height: 77px; background-color: white; overflow: auto;"><div><!--

Code highlighting produced by Actipro CodeHighlighter (freeware)
http://www.CodeHighlighter.com/

--><span style="color: #008080;">1</span> <span style="color: #000000;">nuget push SamplePackage</span><span style="color: #000000;">.</span><span style="color: #000000;">1.0</span><span style="color: #000000;">.</span><span style="color: #000000;">0</span><span style="color: #000000;">.</span><span style="color: #000000;">nupkg </span><span style="color: #000000;">00000000</span><span style="color: #000000;">-</span><span style="color: #000000;">0000</span><span style="color: #000000;">-</span><span style="color: #000000;">0000</span><span style="color: #000000;">-</span><span style="color: #000000;">0000</span><span style="color: #000000;">-</span><span style="color: #000000;">00000000000</span><span style="color: #000000;"> -Source http:</span><span style="color: #000000;">//</span><span style="color: #000000;">www</span><span style="color: #000000;">.</span><span style="color: #000000;">myget</span><span style="color: #000000;">.</span><span style="color: #000000;">org</span><span style="color: #000000;">/</span><span style="color: #000000;">F</span><span style="color: #000000;">/</span><span style="color: #000000;">somefeed</span><span style="color: #000000;">/</span><span style="color: #000000;">api</span><span style="color: #000000;">/</span><span style="color: #000000;">v1 
</span><span style="color: #008080;">2</span> <span style="color: #000000;">
</span><span style="color: #008080;">3</span> <span style="color: #000000;">nuget push SamplePackage</span><span style="color: #000000;">.</span><span style="color: #000000;">1.0</span><span style="color: #000000;">.</span><span style="color: #000000;">0</span><span style="color: #000000;">.</span><span style="color: #000000;">Symbols</span><span style="color: #000000;">.</span><span style="color: #000000;">nupkg </span><span style="color: #000000;">00000000</span><span style="color: #000000;">-</span><span style="color: #000000;">0000</span><span style="color: #000000;">-</span><span style="color: #000000;">0000</span><span style="color: #000000;">-</span><span style="color: #000000;">0000</span><span style="color: #000000;">-</span><span style="color: #000000;">00000000000</span><span style="color: #000000;"> -Source http:</span><span style="color: #000000;">//</span><span style="color: #000000;">nuget</span><span style="color: #000000;">.</span><span style="color: #000000;">gw</span><span style="color: #000000;">.</span><span style="color: #000000;">symbolsource</span><span style="color: #000000;">.</span><span style="color: #000000;">org</span><span style="color: #000000;">/</span><span style="color: #000000;">MyGet</span><span style="color: #000000;">/</span><span style="color: #000000;">somefeed</span></div></pre>
<!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>
</p>
<p>An example of these commands can also be found on the <em>Feed Details</em> tab for your MyGet feed.</p>
<h2>Consuming symbol packages in Visual Studio</h2>
<p>When logging in to MyGet, you can find the symbols URL compatible with Visual Studio under the <em>Feed Details</em> tab for your MyGet feed. This URL will be the same for all feeds you are allowed to consume, so no need to configure 10+ symbol servers in Visual Studio. Here&rsquo;s how to configure it.</p>
<p>First of all, Visual Studio typically will only debug your own source code, the source code of the project or projects that are currently opened in Visual Studio. To disable this behavior and to instruct Visual Studio to also try to debug code other than the projects that are currently opened, open the <em>Options </em>dialog (under the menu <em>Tools &gt; Options</em>). Find the <em>Debugging</em> node on the left and click the <em>General</em> node underneath. Turn off the option <em>Enable Just My Code</em>. Also turn on the option <em>Enable source server support</em>. This usually triggers a warning message but it is safe to just click <em>Yes</em> and continue with the settings specified.</p>
<p><a href="/images/image_151.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: block; float: none; margin-left: auto; margin-right: auto; padding-top: 0px; border: 0px;" title="MyGet symbol server in Visual Studio" src="/images/image_thumb_119.png" border="0" alt="MyGet symbol server in Visual Studio" width="404" height="236" /></a></p>
<p>Keep the <em>Options</em> dialog opened and find the <em>Symbols</em> node under the <em>Debugging</em> node on the left. In the dialog shown in Figure 4-14, add the symbol server URL for <em>your</em> MyGet feed: <a title="http://srv.symbolsource.org/pdb/MyGet/maartenba/11111111-1111-1111-1111-11111111111" href="http://srv.symbolsource.org/pdb/MyGet/username/11111111-1111-1111-1111-11111111111">http://srv.symbolsource.org/pdb/MyGet/username/11111111-1111-1111-1111-11111111111</a>. After that, click <em>OK</em> to confirm configuration changes and consume symbols for NuGet packages.</p>
<p>Enjoy!</p>
{% include imported_disclaimer.html %}
