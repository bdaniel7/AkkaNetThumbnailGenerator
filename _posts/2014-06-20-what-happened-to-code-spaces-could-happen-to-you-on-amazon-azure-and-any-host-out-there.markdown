---
layout: post
title: "What happened to Code Spaces could happen to you. On Amazon, Azure and any host out there."
date: 2014-06-20 10:25:00 +0000
comments: true
published: true
categories: ["post"]
tags: ["Personal", "Security", "Azure"]
alias: ["/post/2014/06/20/What-happened-to-Code-Spaces-could-happen-to-you-On-Amazon-Azure-and-any-host-out-there.aspx", "/post/2014/06/20/what-happened-to-code-spaces-could-happen-to-you-on-amazon-azure-and-any-host-out-there.aspx"]
author: Maarten Balliauw
redirect_from:
 - /post/2014/06/20/What-happened-to-Code-Spaces-could-happen-to-you-On-Amazon-Azure-and-any-host-out-there.aspx.html
 - /post/2014/06/20/what-happened-to-code-spaces-could-happen-to-you-on-amazon-azure-and-any-host-out-there.aspx.html
---
<p>Earlier this week, a sad thing happened to the version control hosting service <a href="http://www.codespaces.com/">Code Spaces</a>. A malicious person gained access to their Amazon control panel and after demanding a ransom to the owners of Code Spaces, that malicious person started deleting data and EC2 instances. After a couple of failed attempts from Code Spaces to stop this from happening, the impossible happened: the hacker rendered Code Spaces dead. Everything that was their business is gone. As they state themselves: 
<blockquote> <p>Code Spaces will not be able to operate beyond this point, the cost of resolving this issue to date and the expected cost of refunding customers who have been left without the service they paid for will put Code Spaces in a irreversible position both financially and in terms of on going credibility.</p>
</blockquote>
 <p>That’s sad. Sad for users, sad for employees and sad for business owner. Some nutcase destroyed a flourishing business over the course of 12 hours. Horrible! But the most horrible thing? It can happen to you! Or as <a href="http://twitter.com/codinghorror">Jeff Atwood</a> stated: <p><a href="https://twitter.com/codinghorror/status/479880707540406272"><font style="background-color: transparent;"><img width="579" height="109" title="Jeff Atwood - they are everywhere!" style="border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" alt="Jeff Atwood - they are everywhere!" src="/images/image_thumb_289.png" border="0"></font></a> <p>The fact that this could happen is bad. But security is what it is: there is always this chance of something happening, whatever we do to mitigate as much of this as possible. Any service out there, whether Amazon Microsoft Azure or your hosting control panel are open for everyone with a username and password. Being a Microsoft Azure fan, I’ll use this post to scare <em>everyone</em> using the service and tools about what can happen. Knowing about what can happen is the first step towards mitigating it. <h2></h2> <h2>Disclaimer and setting the stage</h2> <p>What I do NOT want to do in this post is go into the technical details of every potential mishap that can happen. We’re all developers, there’s a myriad of search engines out there that can present us with all the details. I also do not want to give people the tools to do these mishaps. I’ll give you some theory on what could happen but I don’t want to be the guy who told people to be evil. Don’t. I deny any responsibility for potential consequences of this post.</p> <h2>Microsoft Account</h2> <p>Every Microsoft Azure subscription is linked to either an organizational account or a Microsoft Account. Earlier this week, I saw someone tweet that they had 32 Microsoft Azure subscriptions linked to their Microsoft Account. If I were looking to do bad things there, I’d try and get access to that account using any of the approaches available. Trying to gain access, some social engineering, anything! 32 subscriptions is a lot of ransom I could ask for. And with potentially 20 cores of CPU available in all of them, it’s also an ideal target to go and host some spam bots or some machines to perform a DDoS. <p>What can we do with our Microsoft Account to make it all a bit more secure? <ul> <li>Enable 2-factor authentication on your Microsoft Account. Do it!</li> <li>Partition. Have one Microsoft Account for every subscription. With a different, complex password.</li> <li>Managing this many subscriptions with this many accounts is hard. Don’t be tempted to make all the accounts “Administrators” on all of the subscriptions. It’s convenient and you will have one single logon to manage it all, but it broadens the potential attack surface again.</li></ul> <h2>Certificates, PowerShell, the Command Line, NuGet and Visual Studio</h2> <p>The Microsoft Azure Management API’s can be used to do virtually anything you can do through the management portal. And more! Access to the management API is secured using a certificate that you have to upload to the portal. Great! Unless that management certificate was generated on your end without any security in mind. Not having a passphrase to use it or storing that passphrase on your system means that anyone with access to your computer could, in theory, use the management API with that certificate. But this is probably unlikely since as an attacker I’d have to have access to your computer. There are more clever ways! <p>Those PowerShell and cross-platform tools are great! Using them, we can script against the management API to create storage accounts, provision and deprovision resources, add co-administrators and so forth. What if an attacker got some software on your system? Malware. A piece of sample code. Anything! If you’re using the PowerShell or cross-platform tools, you’ve probably used them before and set the active subscription. All an attacker would have to do is run the command to create a co-admin or delete or provision something. No. Credentials. Needed. <p>Not possible, you say? You never install any software that is out there? And you’re especially wary when getting something through e-mail? Good for you! “But that NuGet thing is so damn tempting. I installed half of NuGet.org so far!” – sounds familiar? Did you know NuGet packages can run PowerShell code when installed in Visual Studio? What if… an attacker put a package named “jQeury” out there? And other potential spelling mistakes? They could ship the contents of the real jQuery package in them so you don’t see anything unusual. In that package, someone could put some call to the Azure PowerShell CmdLets and a fallback using the cross-platform tools to create a storage account, mirror a couple of TB of illegal content and host it on your account. Or delete all your precious VMs.<p>Not using any of the PowerShell or cross-platform tools? No worries: attackers could also leverage the<em> $dte</em> object and invoke stuff inside Visual Studio and trigger any of the ample commands available in there. You may notice something in the activity log when this happens, but still.<p>What can we do to use these tools but make it a bit more secure? <ul> <li>Think about good certificate management. Give them a shorter lifetime, replace them every now and then. Don’t store passphrases.</li> <li>Using the PowerShell or cross-platform tools? Make sure that after every use you either invalidate the credential used. Don’t just set the active subscription in these tools to null. There’s a list command of which an attacker could set the currect subscription id.</li><li>That publish settings file? It contains the management certificate. Don't distribute it.</li><li>Automate using all the tools! But not on all developer machines, do it on the build server.</li></ul> <p>All these tools are very useful and handy to work with, but use them with some common sense. If you have other tips for locking it all down, leave them in the comments. <p>Enjoy your night rest.</p>
{% include imported_disclaimer.html %}
