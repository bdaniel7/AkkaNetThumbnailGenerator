---
layout: post
title: "Wordpress auto sign-on with IIS7 and a plugin"
date: 2011-05-04 11:17:00 +0000
comments: true
published: true
categories: ["post"]
tags: ["ASP.NET", "General", "PHP", "Projects", "Publications", "Webfarm"]
alias: ["/post/2011/05/04/Wordpress-auto-sign-on-with-IIS7-and-a-plugin.aspx", "/post/2011/05/04/wordpress-auto-sign-on-with-iis7-and-a-plugin.aspx"]
author: Maarten Balliauw
redirect_from:
 - /post/2011/05/04/Wordpress-auto-sign-on-with-IIS7-and-a-plugin.aspx.html
 - /post/2011/05/04/wordpress-auto-sign-on-with-iis7-and-a-plugin.aspx.html
---
<p>For our <a href="http://blogs.realdolmen.com/experts/" target="_blank">RealDolmen blog platform</a>, where we use <a href="http://wordpress.org" target="_blank">Wordpress</a> as the engine running multiple external and internal blogs (yes, that’s an internal SaaS we have there!), we wanted to have an easy solution for our employees to sign-on to the platform. We had a look at the Wordpress plugin repository and found the excellent <a href="http://wordpress.org/extend/plugins/simple-ldap-login/" target="_blank">Simple LDAP Login</a> plugin for providing sign-on through Active Directory. This allowed for sign-on using Active Directory credentials. However, when browsing the blogs from the corporate network, the login page is one extra step in the way of users: they are already logged on to the network, so why sign-on again using the same credentials?</p>
<p>Luckily for us, we are hosting <a href="http://wordpress.org" target="_blank">Wordpress</a> on <a href="http://wordpress.visitmix.com/" target="_blank">Windows, IIS 7 and SQL Server</a>. Shocked? No Linux, MySQL, .htaccess and mod_rewrite there! And it works perfectly. In fact, we get some extras for free: single sign-on is made possible by IIS!</p>
<h2>Configuring Windows Authentication in IIS7</h2>
<p>In order to provide a single sign-on scenario for Wordpress on IIS, simply enable Windows Authentication in the IIS7 management console, like so:</p>
<p><a href="/images/image_111.png"><img width="244" height="133" title="Windows Authentication in IIS - Wordpress, PHP" style="margin: 5px auto; border: 0px currentColor; border-image: none; padding-top: 0px; padding-right: 0px; padding-left: 0px; float: none; display: block; background-image: none;" alt="Windows Authentication in IIS - Wordpress, PHP" src="/images/image_thumb_81.png" border="0"></a></p>
<p>If you now browse to the Wordpress site… Nothing happens! Except the normal stuff: a non-logged-in version of the site is displaying… The reason for this is obvious: anonymous authentication is also enabled and is higher up the chain, hence IIS7 refuses to authenticate the user using his Active Directory credentials… One solution may be to reverse the order, but that would mean *every* single user is required to sign-on. Not the ideal situation… And that’s where our custom plugin for Wordpress comes in handy, heck, we’re even sharing it with you so you can use it too!</p>
<h2>Fooling IIS7 when required…</h2>
<p>A solution to the fact that anonymous authentication is higher up the chain in IIS7 and that this is required by the fact that we don’t want everyone to have to login, is fooling IIS7 into believing that Windows Authentication is higher up the chain in some situations… And why not do that from PHP and wrap that “hack” into a Wordpress plugin?</p>
<p>The basis for our plugin is the following: whenever a user browses the website and uses Internet Explorer (sorry, no support for this in the other browsers…), Windows Authentication is a possibility. The only step left is triggering this, which is pretty easy: if you detect a user is coming from the local LAN and is using Internet Explorer (on Windows), send the user a <em>HTTP/1.1 401 Unauthorized</em> header. This will make IE send out the Windows Authentication token to the server and will also trick IIS7 into thinking that anonymous authentication failed, which will immediately trigger Windows Authentication server-side as well.</p>
<p>Now how to do this in a Wordpress plugin? Well, simple: hook into 2 events Wordpress offers, namely <em>init</em> and <em>login_form</em>. Init? Well, yes! You want users to automatically sign-on when coming from the LAN. There’s no better hook to do that than <em>init</em>. The other one is obvious: if a user somehow lands at the login page and is coming from the local LAN, you want that page to be skipped and use Windows Authentication there. Here’s some simplified code for registering the hooks:</p>
<div class="wlWriterEditableSmartContent" id="scid:9D7513F9-C04C-4721-824A-2B34F0212519:04d07206-bc5e-49db-8905-b689c0f0b3cd" style="margin: 0px; padding: 0px; float: none; display: inline;">
<div><!--

Code highlighting produced by Actipro CodeHighlighter (freeware)
http://www.CodeHighlighter.com/

--><span style="color: rgb(0, 128, 128);">1</span> <span style="color: rgb(0, 0, 0);">&lt;?</span><span style="color: rgb(0, 0, 0);">php </span><span style="color: rgb(0, 128, 128);">2</span> <span style="color: rgb(0, 0, 0);">add_action(</span><span style="color: rgb(0, 0, 0);">'</span><span style="color: rgb(0, 0, 0);">init</span><span style="color: rgb(0, 0, 0);">'</span><span style="color: rgb(0, 0, 0);">,</span><span style="color: rgb(0, 0, 0);">'</span><span style="color: rgb(0, 0, 0);">iisauth_auto_login</span><span style="color: rgb(0, 0, 0);">'</span><span style="color: rgb(0, 0, 0);">); </span><span style="color: rgb(0, 128, 128);">3</span> <span style="color: rgb(0, 0, 0);">add_action(</span><span style="color: rgb(0, 0, 0);">'</span><span style="color: rgb(0, 0, 0);">login_form</span><span style="color: rgb(0, 0, 0);">'</span><span style="color: rgb(0, 0, 0);">,</span><span style="color: rgb(0, 0, 0);">'</span><span style="color: rgb(0, 0, 0);">iisauth_wp_login_form</span><span style="color: rgb(0, 0, 0);">'</span><span style="color: rgb(0, 0, 0);">);</span></div>
<!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>
<p>Next, implementation! Let’s start with what happens on <em>init</em>:</p>
<div class="wlWriterEditableSmartContent" id="scid:9D7513F9-C04C-4721-824A-2B34F0212519:066c6261-8dc7-4aae-8fd4-394d14941a1e" style="margin: 0px; padding: 0px; float: none; display: inline;">
<div><!--

Code highlighting produced by Actipro CodeHighlighter (freeware)
http://www.CodeHighlighter.com/

--><span style="color: rgb(0, 128, 128);">1</span> <span style="color: rgb(0, 0, 255);">function</span><span style="color: rgb(0, 0, 0);"> iisauth_auto_login() { </span><span style="color: rgb(0, 128, 128);">2</span> <span style="color: rgb(0, 0, 255);">if</span><span style="color: rgb(0, 0, 0);"> (</span><span style="color: rgb(0, 0, 0);">!</span><span style="color: rgb(0, 0, 0);">is_user_logged_in() </span><span style="color: rgb(0, 0, 0);">&amp;&amp;</span><span style="color: rgb(0, 0, 0);"> iisauth_is_lan_user() </span><span style="color: rgb(0, 0, 0);">&amp;&amp;</span><span style="color: rgb(0, 0, 0);"> iisauth_using_ie()) { </span><span style="color: rgb(0, 128, 128);">3</span> <span style="color: rgb(0, 0, 0);"> iisauth_wp_login_form(); </span><span style="color: rgb(0, 128, 128);">4</span> <span style="color: rgb(0, 0, 0);"> } </span><span style="color: rgb(0, 128, 128);">5</span> <span style="color: rgb(0, 0, 0);">}</span></div>
<!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>
<p>As you can see: whenever we suspect a user is coming from the internal LAN and is using IE, we call the <em>iisauth_wp_login_form()</em> method (which “by accident” also gets triggered when a user is on the login page). Here’s that code:</p>
<div class="wlWriterEditableSmartContent" id="scid:9D7513F9-C04C-4721-824A-2B34F0212519:35351d78-d7fb-4717-b1fd-64e287f86fb5" style="margin: 0px; padding: 0px; float: none; display: inline;">
<div><!--

Code highlighting produced by Actipro CodeHighlighter (freeware)
http://www.CodeHighlighter.com/

--><span style="color: rgb(0, 128, 128);"> 1</span> <span style="color: rgb(0, 0, 255);">function</span><span style="color: rgb(0, 0, 0);"> iisauth_wp_login_form() { </span><span style="color: rgb(0, 128, 128);"> 2</span> <span style="color: rgb(0, 128, 0);">//</span><span style="color: rgb(0, 128, 0);"> Checks if IIS provided a user, and if not, rejects the request with 401 </span><span style="color: rgb(0, 128, 128);"> 3</span> <span style="color: rgb(0, 128, 0);"> // so that it can be authenticated</span><span style="color: rgb(0, 128, 128);"> 4</span> <span style="color: rgb(0, 0, 255);">if</span><span style="color: rgb(0, 0, 0);"> (iisauth_is_lan_user() </span><span style="color: rgb(0, 0, 0);">&amp;&amp;</span><span style="color: rgb(0, 0, 0);"> iisauth_using_ie() </span><span style="color: rgb(0, 0, 0);">&amp;&amp;</span><span style="color: rgb(0, 0, 255);">empty</span><span style="color: rgb(0, 0, 0);">(</span><span style="color: rgb(128, 0, 128);">$_SERVER</span><span style="color: rgb(0, 0, 0);">[</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">REMOTE_USER</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">])) { </span><span style="color: rgb(0, 128, 128);"> 5</span> <span style="color: rgb(0, 0, 0);"> nocache_headers(); </span><span style="color: rgb(0, 128, 128);"> 6</span> <span style="color: rgb(0, 128, 128);">header</span><span style="color: rgb(0, 0, 0);">(</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">HTTP/1.1 401 Unauthorized</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">); </span><span style="color: rgb(0, 128, 128);"> 7</span> <span style="color: rgb(0, 128, 128);">ob_clean</span><span style="color: rgb(0, 0, 0);">(); </span><span style="color: rgb(0, 128, 128);"> 8</span> <span style="color: rgb(0, 0, 255);">exit</span><span style="color: rgb(0, 0, 0);">(); </span><span style="color: rgb(0, 128, 128);"> 9</span> <span style="color: rgb(0, 0, 0);"> } </span><span style="color: rgb(0, 0, 255);">else</span><span style="color: rgb(0, 0, 255);">if</span><span style="color: rgb(0, 0, 0);"> (iisauth_is_lan_user() </span><span style="color: rgb(0, 0, 0);">&amp;&amp;</span><span style="color: rgb(0, 0, 0);"> iisauth_using_ie() </span><span style="color: rgb(0, 0, 0);">&amp;&amp;</span><span style="color: rgb(0, 0, 0);">!</span><span style="color: rgb(0, 0, 255);">empty</span><span style="color: rgb(0, 0, 0);">(</span><span style="color: rgb(128, 0, 128);">$_SERVER</span><span style="color: rgb(0, 0, 0);">[</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">REMOTE_USER</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">])) { </span><span style="color: rgb(0, 128, 128);">10</span> <span style="color: rgb(0, 0, 255);">if</span><span style="color: rgb(0, 0, 0);"> (</span><span style="color: rgb(0, 128, 128);">function_exists</span><span style="color: rgb(0, 0, 0);">(</span><span style="color: rgb(0, 0, 0);">'</span><span style="color: rgb(0, 0, 0);">get_userdatabylogin</span><span style="color: rgb(0, 0, 0);">'</span><span style="color: rgb(0, 0, 0);">)) { </span><span style="color: rgb(0, 128, 128);">11</span> <span style="color: rgb(128, 0, 128);">$username</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 128, 128);">strtolower</span><span style="color: rgb(0, 0, 0);">(</span><span style="color: rgb(0, 128, 128);">substr</span><span style="color: rgb(0, 0, 0);">(</span><span style="color: rgb(128, 0, 128);">$_SERVER</span><span style="color: rgb(0, 0, 0);">[</span><span style="color: rgb(0, 0, 0);">'</span><span style="color: rgb(0, 0, 0);">REMOTE_USER</span><span style="color: rgb(0, 0, 0);">'</span><span style="color: rgb(0, 0, 0);">]</span><span style="color: rgb(0, 0, 0);">,</span><span style="color: rgb(0, 128, 128);">strrpos</span><span style="color: rgb(0, 0, 0);">(</span><span style="color: rgb(128, 0, 128);">$_SERVER</span><span style="color: rgb(0, 0, 0);">[</span><span style="color: rgb(0, 0, 0);">'</span><span style="color: rgb(0, 0, 0);">REMOTE_USER</span><span style="color: rgb(0, 0, 0);">'</span><span style="color: rgb(0, 0, 0);">]</span><span style="color: rgb(0, 0, 0);">,</span><span style="color: rgb(0, 0, 0);">'</span><span style="color: rgb(0, 0, 0);">\\</span><span style="color: rgb(0, 0, 0);">'</span><span style="color: rgb(0, 0, 0);">) </span><span style="color: rgb(0, 0, 0);">+</span><span style="color: rgb(0, 0, 0);">1</span><span style="color: rgb(0, 0, 0);">)); </span><span style="color: rgb(0, 128, 128);">12</span> <span style="color: rgb(0, 128, 128);">13</span> <span style="color: rgb(128, 0, 128);">$user</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);"> get_userdatabylogin(</span><span style="color: rgb(128, 0, 128);">$username</span><span style="color: rgb(0, 0, 0);">); </span><span style="color: rgb(0, 128, 128);">14</span> <span style="color: rgb(0, 0, 255);">if</span><span style="color: rgb(0, 0, 0);"> (</span><span style="color: rgb(0, 0, 0);">!</span><span style="color: rgb(0, 128, 128);">is_a</span><span style="color: rgb(0, 0, 0);">(</span><span style="color: rgb(128, 0, 128);">$user</span><span style="color: rgb(0, 0, 0);">,</span><span style="color: rgb(0, 0, 0);">'</span><span style="color: rgb(0, 0, 0);">WP_User</span><span style="color: rgb(0, 0, 0);">'</span><span style="color: rgb(0, 0, 0);">)) { </span><span style="color: rgb(0, 128, 128);">15</span> <span style="color: rgb(0, 128, 0);">//</span><span style="color: rgb(0, 128, 0);"> Create the user</span><span style="color: rgb(0, 128, 128);">16</span> <span style="color: rgb(128, 0, 128);">$newUserId</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);"> iisauth_create_wp_user(</span><span style="color: rgb(128, 0, 128);">$username</span><span style="color: rgb(0, 0, 0);">); </span><span style="color: rgb(0, 128, 128);">17</span> <span style="color: rgb(0, 0, 255);">if</span><span style="color: rgb(0, 0, 0);"> (</span><span style="color: rgb(0, 0, 0);">!</span><span style="color: rgb(0, 128, 128);">is_a</span><span style="color: rgb(0, 0, 0);">(</span><span style="color: rgb(128, 0, 128);">$newUserId</span><span style="color: rgb(0, 0, 0);">,</span><span style="color: rgb(0, 0, 0);">'</span><span style="color: rgb(0, 0, 0);">WP_Error</span><span style="color: rgb(0, 0, 0);">'</span><span style="color: rgb(0, 0, 0);">)) { </span><span style="color: rgb(0, 128, 128);">18</span> <span style="color: rgb(128, 0, 128);">$user</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);"> get_userdatabylogin(</span><span style="color: rgb(128, 0, 128);">$username</span><span style="color: rgb(0, 0, 0);">); </span><span style="color: rgb(0, 128, 128);">19</span> <span style="color: rgb(0, 0, 0);"> } </span><span style="color: rgb(0, 128, 128);">20</span> <span style="color: rgb(0, 0, 0);"> } </span><span style="color: rgb(0, 128, 128);">21</span> <span style="color: rgb(0, 128, 128);">22</span> <span style="color: rgb(0, 0, 255);">if</span><span style="color: rgb(0, 0, 0);"> (</span><span style="color: rgb(128, 0, 128);">$user</span><span style="color: rgb(0, 0, 0);">&amp;&amp;</span><span style="color: rgb(128, 0, 128);">$username</span><span style="color: rgb(0, 0, 0);">==</span><span style="color: rgb(128, 0, 128);">$user</span><span style="color: rgb(0, 0, 0);">-&gt;</span><span style="color: rgb(0, 0, 0);">user_login) { </span><span style="color: rgb(0, 128, 128);">23</span> <span style="color: rgb(0, 128, 0);">//</span><span style="color: rgb(0, 128, 0);"> Clean buffers</span><span style="color: rgb(0, 128, 128);">24</span> <span style="color: rgb(0, 128, 128);">ob_clean</span><span style="color: rgb(0, 0, 0);">(); </span><span style="color: rgb(0, 128, 128);">25</span> <span style="color: rgb(0, 128, 128);">26</span> <span style="color: rgb(0, 128, 0);">//</span><span style="color: rgb(0, 128, 0);"> Feed WordPress a double-MD5 hash (MD5 of value generated in check_passwords)</span><span style="color: rgb(0, 128, 128);">27</span> <span style="color: rgb(128, 0, 128);">$password</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 128, 128);">md5</span><span style="color: rgb(0, 0, 0);">(</span><span style="color: rgb(128, 0, 128);">$user</span><span style="color: rgb(0, 0, 0);">-&gt;</span><span style="color: rgb(0, 0, 0);">user_pass); </span><span style="color: rgb(0, 128, 128);">28</span> <span style="color: rgb(0, 128, 128);">29</span> <span style="color: rgb(0, 128, 0);">//</span><span style="color: rgb(0, 128, 0);"> User is now authorized; force WordPress to use the generated password</span><span style="color: rgb(0, 128, 128);">30</span> <span style="color: rgb(128, 0, 128);">$using_cookie</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 255);">true</span><span style="color: rgb(0, 0, 0);">; </span><span style="color: rgb(0, 128, 128);">31</span> <span style="color: rgb(0, 0, 0);"> wp_setcookie(</span><span style="color: rgb(128, 0, 128);">$user</span><span style="color: rgb(0, 0, 0);">-&gt;</span><span style="color: rgb(0, 0, 0);">user_login</span><span style="color: rgb(0, 0, 0);">,</span><span style="color: rgb(128, 0, 128);">$password</span><span style="color: rgb(0, 0, 0);">,</span><span style="color: rgb(128, 0, 128);">$using_cookie</span><span style="color: rgb(0, 0, 0);">); </span><span style="color: rgb(0, 128, 128);">32</span> <span style="color: rgb(0, 128, 128);">33</span> <span style="color: rgb(0, 128, 0);">//</span><span style="color: rgb(0, 128, 0);"> Redirect and stop execution</span><span style="color: rgb(0, 128, 128);">34</span> <span style="color: rgb(128, 0, 128);">$redirectUrl</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);"> home_url(); </span><span style="color: rgb(0, 128, 128);">35</span> <span style="color: rgb(0, 0, 255);">if</span><span style="color: rgb(0, 0, 0);"> (</span><span style="color: rgb(0, 0, 255);">isset</span><span style="color: rgb(0, 0, 0);">(</span><span style="color: rgb(128, 0, 128);">$_GET</span><span style="color: rgb(0, 0, 0);">[</span><span style="color: rgb(0, 0, 0);">'</span><span style="color: rgb(0, 0, 0);">redirect_to</span><span style="color: rgb(0, 0, 0);">'</span><span style="color: rgb(0, 0, 0);">])) { </span><span style="color: rgb(0, 128, 128);">36</span> <span style="color: rgb(128, 0, 128);">$redirectUrl</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(128, 0, 128);">$_GET</span><span style="color: rgb(0, 0, 0);">[</span><span style="color: rgb(0, 0, 0);">'</span><span style="color: rgb(0, 0, 0);">redirect_to</span><span style="color: rgb(0, 0, 0);">'</span><span style="color: rgb(0, 0, 0);">]; </span><span style="color: rgb(0, 128, 128);">37</span> <span style="color: rgb(0, 0, 0);"> } </span><span style="color: rgb(0, 128, 128);">38</span> <span style="color: rgb(0, 0, 0);"> wp_redirect(</span><span style="color: rgb(128, 0, 128);">$redirectUrl</span><span style="color: rgb(0, 0, 0);">); </span><span style="color: rgb(0, 128, 128);">39</span> <span style="color: rgb(0, 0, 255);">exit</span><span style="color: rgb(0, 0, 0);">; </span><span style="color: rgb(0, 128, 128);">40</span> <span style="color: rgb(0, 0, 0);"> } </span><span style="color: rgb(0, 128, 128);">41</span> <span style="color: rgb(0, 0, 0);"> } </span><span style="color: rgb(0, 128, 128);">42</span> <span style="color: rgb(0, 0, 0);"> } </span><span style="color: rgb(0, 128, 128);">43</span> <span style="color: rgb(0, 0, 0);">}</span></div>
<!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>
<p>What happens here is that the authentication header is sent when needed, and once a user is provided by IIS we just log the user in to Wordpress and redirect him. The real “magic” is in this part:</p>
<div class="wlWriterEditableSmartContent" id="scid:9D7513F9-C04C-4721-824A-2B34F0212519:e9b7eef8-e1f3-45a9-b213-577598e55b03" style="margin: 0px; padding: 0px; float: none; display: inline;">
<div><!--

Code highlighting produced by Actipro CodeHighlighter (freeware)
http://www.CodeHighlighter.com/

--><span style="color: rgb(0, 128, 128);">1</span> <span style="color: rgb(0, 128, 0);">//</span><span style="color: rgb(0, 128, 0);"> Checks if IIS provided a user, and if not, rejects the request with 401 </span><span style="color: rgb(0, 128, 128);">2</span> <span style="color: rgb(0, 128, 0);">// so that it can be authenticated</span><span style="color: rgb(0, 128, 128);">3</span> <span style="color: rgb(0, 0, 255);">if</span><span style="color: rgb(0, 0, 0);"> (iisauth_is_lan_user() </span><span style="color: rgb(0, 0, 0);">&amp;&amp;</span><span style="color: rgb(0, 0, 0);"> iisauth_using_ie() </span><span style="color: rgb(0, 0, 0);">&amp;&amp;</span><span style="color: rgb(0, 0, 255);">empty</span><span style="color: rgb(0, 0, 0);">(</span><span style="color: rgb(128, 0, 128);">$_SERVER</span><span style="color: rgb(0, 0, 0);">[</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">REMOTE_USER</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">])) { </span><span style="color: rgb(0, 128, 128);">4</span> <span style="color: rgb(0, 0, 0);"> nocache_headers(); </span><span style="color: rgb(0, 128, 128);">5</span> <span style="color: rgb(0, 128, 128);">header</span><span style="color: rgb(0, 0, 0);">(</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">HTTP/1.1 401 Unauthorized</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">); </span><span style="color: rgb(0, 128, 128);">6</span> <span style="color: rgb(0, 128, 128);">ob_clean</span><span style="color: rgb(0, 0, 0);">(); </span><span style="color: rgb(0, 128, 128);">7</span> <span style="color: rgb(0, 0, 255);">exit</span><span style="color: rgb(0, 0, 0);">(); </span><span style="color: rgb(0, 128, 128);">8</span> <span style="color: rgb(0, 0, 0);">}</span></div>
<!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>
<p>Which does exactly what I described before in this post…</p>
<h2>Download</h2>
<p>Well of course, feel free to use this plugin! Here’s the source code: <a href="/files/2011/5/iisauth.zip">iisauth.zip (1.44 kb)</a>&nbsp;<strong>[update] Code for Wordpress 3.1+: </strong><a href="/files/2014/03/iisauth.php">IISAUTH.PHP (3.4KB)</a></p>
<p><strong>(</strong>And big thanks to our marketing manager for allowing me to distribute this little plugin! Again proof for the no-nonsense spirit at <a href="http://www.realdolmen.com" target="_blank">RealDolmen</a>!)</p>
{% include imported_disclaimer.html %}
