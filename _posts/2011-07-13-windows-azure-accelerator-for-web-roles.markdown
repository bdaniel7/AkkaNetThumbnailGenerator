---
layout: post
title: "Windows Azure Accelerator for Web Roles"
date: 2011-07-13 09:33:00 +0000
comments: true
published: true
categories: ["post"]
tags: ["ASP.NET", "Azure", "CSharp", "General", "MVC", "Scalability", "Webfarm"]
alias: ["/post/2011/07/13/Windows-Azure-Accelerator-for-Web-Roles.aspx", "/post/2011/07/13/windows-azure-accelerator-for-web-roles.aspx"]
author: Maarten Balliauw
redirect_from:
 - /post/2011/07/13/Windows-Azure-Accelerator-for-Web-Roles.aspx.html
 - /post/2011/07/13/windows-azure-accelerator-for-web-roles.aspx.html
---
<p><a href="http://waawebroles.codeplex.com/"><img style="background-image: none; border-bottom: 0px; border-left: 0px; margin: 0px 0px 5px 5px; padding-left: 0px; padding-right: 0px; display: inline; float: right; border-top: 0px; border-right: 0px; padding-top: 0px" title="Windows Azure Accelerator for Web Roles" border="0" alt="Windows Azure Accelerator for Web Roles" align="right" src="/images/image_132.png" width="300" height="73" /></a>One of the questions I often get around Windows Azure is: “Is Windows Azure interesting for me?”. It’s a tough one, because most of the time when someone asks that question they currently already have a server somewhere that hosts 100 websites. In the full-fledged Windows Azure model, that would mean 100 x 2 (we want the SLA) = 200 Windows Azure instances. And a stroke at the end of the month when the bill arrives. Microsoft’s DPE team have released something very interesting for those situations though: the <a href="http://waawebroles.codeplex.com/" target="_blank">Windows Azure Accelerator for Web Roles</a>.</p>  <p>In short, the WAAWR (no way I’m going to write Windows Azure Accelerator for Web Roles out every time!) is a means of creating virtual web sites on the IIS server running on a Windows Azure instance. Add “multi-instance” to that and have a free tool to create a server farm for you!</p>  <p>The features on paper:</p>  <ul>   <li>Deploy sites to Windows Azure in less than 30 seconds</li>    <li>Enables deployments to multiple Web Role instances using Web Deploy</li>    <li>Saves Web Deploy packages &amp; IIS configuration in Windows Azure storage to provide durability</li>    <li>A web administrator portal for managing web sites deployed to the role</li>    <li>The ability to upload and manage SSL certificates</li>    <li>Simple logging and diagnostics tools</li> </ul>  <p>Interesting… Let’s go for a ride!</p>  <h2>Obtaining &amp; installing the Windows Azure Accelerator for Web Roles</h2>  <p>Installing the WAAWR is as easy as <a href="http://waawebroles.codeplex.com/" target="_blank">download</a>, extract, <em>buildme.cmd</em> and you’re done. After that, Visual Studio 2010 (or Visual Studio Web Developer Express!) features a new project template:</p>  <p><a href="/images/image_133.png"><img style="background-image: none; border-bottom: 0px; border-left: 0px; margin: 5px auto; padding-left: 0px; padding-right: 0px; display: block; float: none; border-top: 0px; border-right: 0px; padding-top: 0px" title="Create new Windows Azure Accelerator for Web Roles project" border="0" alt="Create new Windows Azure Accelerator for Web Roles project" src="/images/image_thumb_101.png" width="404" height="277" /></a></p>  <p>Click <em>OK</em>, enter the required information (such as: a storage account that will be used for synchronizing the different server instances and an administrator account). After that, <em>enable remote desktop</em> and <em>publish</em>. That’s it. I’ve never ever setup a web farm more quickly than that.</p>  <h2>Creating a web site</h2>  <p>After deploying the solution you created in Visual Studio, browse to the live deployment and log in with the administrator credentials you created when creating the project. This will give you a nice looking web interface which allows you to create virtual web sites and have some insight into what’s happening in your server farm.</p>  <p>I’ll create a new virtual website on my server farm:</p>  <p><a href="/images/image_134.png"><img style="background-image: none; border-bottom: 0px; border-left: 0px; margin: 5px auto; padding-left: 0px; padding-right: 0px; display: block; float: none; border-top: 0px; border-right: 0px; padding-top: 0px" title="Create a site in Windows Azure Accelerator for Web Roles" border="0" alt="Create a site in Windows Azure Accelerator for Web Roles" src="/images/image_thumb_102.png" width="404" height="394" /></a></p>  <p>After clicking <em>create</em> we can try to publish an ASP.NET MVC application.</p>  <h2>Publishing a web site</h2>  <p>For testing purposes I created a simple ASP.NET MVC application. Since the default project template already has a high enough “Hello World factor”, let’s immediately right-click the project name and hit <em>Publish</em>. Deploying an application to the newly created Windows Azure webfarm is as easy as specifying the following parameters:</p>  <p><a href="/images/image_135.png"><img style="background-image: none; border-bottom: 0px; border-left: 0px; margin: 5px auto; padding-left: 0px; padding-right: 0px; display: block; float: none; border-top: 0px; border-right: 0px; padding-top: 0px" title="Windows Azure Web Deploy" border="0" alt="Windows Azure Web Deploy" src="/images/image_thumb_103.png" width="404" height="544" /></a></p>  <p>One <em>Publish</em> click later, you are done. And deployed on a web farm instance, I can now see the website itself but also… some statistics :-)</p>  <p><a href="/images/image_136.png"><img style="background-image: none; border-bottom: 0px; border-left: 0px; margin: 5px auto; padding-left: 0px; padding-right: 0px; display: block; float: none; border-top: 0px; border-right: 0px; padding-top: 0px" title="Maarten Balliauw Windows Azure" border="0" alt="Maarten Balliauw Windows Azure" src="/images/image_thumb_104.png" width="404" height="287" /></a></p>  <h2>Conclusion</h2>  <p>The newly released <a href="http://waawebroles.codeplex.com/" target="_blank">Windows Azure Accelerator for Web Roles</a> is, IMHO, the easiest, fastest manner to deploy a multi-site webfarm on Windows Azure. Other options like.the ones proposed by Steve Marx on his blog do work, but are only suitable if you are billing your customer by the hour. </p>  <p>The fact that it uses web deploy to publish applications to the system <em>and</em> the fact that this just works behind a corporate firewall and annoying proxy is just fabulous!</p>  <p>This also has a downside: if I want to push my PHP applications to Windows Azure in a jiffy, chances are this will be a problem. Not on Windows (but not ideal there either), but certainly when publishing apps from other platforms. Is that a self-imposed challenge? Nope. Web deploy does not seem to have an open protocol (that I know of) and while reverse engineering it is possible I will not risk the legal consequences :-) However, some reverse-engineering of the WAAWR itself learned me that websites are stored as a ZIP package on blob storage and there’s a <a href="http://phpazure.codeplex.com/" target="_blank">PHP SDK</a> for that. A nifty workaround is possible as such, if you get your head around the ZIP file folder structure.</p>  <p>My conclusion in short: if you ever receive the question “Is Windows Azure interesting for me?” from someone who wants to host a bunch of websites on it? It is. And it’s easy.</p>
{% include imported_disclaimer.html %}
