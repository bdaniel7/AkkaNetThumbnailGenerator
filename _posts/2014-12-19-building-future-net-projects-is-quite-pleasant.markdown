---
layout: post
title: "Building future .NET projects is quite pleasant"
date: 2014-12-19 14:23:00 +0100
comments: true
published: true
categories: ["post"]
tags: ["ASP.NET", "CSharp", "ICT", "Projects", "TeamCity"]
alias: ["/post/2014/12/19/Building-future-NET-projects-is-quite-pleasant.aspx", "/post/2014/12/19/building-future-net-projects-is-quite-pleasant.aspx"]
author: Maarten Balliauw
redirect_from:
 - /post/2014/12/19/Building-future-NET-projects-is-quite-pleasant.aspx.html
 - /post/2014/12/19/building-future-net-projects-is-quite-pleasant.aspx.html
---
<p>You may remember my ranty post from a couple of months back. If not, read about how <a href="/post/2014/04/11/Building-NET-projects-is-a-world-of-pain-and-heres-how-we-should-solve-it.aspx">building .NET projects is a world of pain and here’s how we should solve it</a>. With <strike>Project K</strike> <strike>ASP.NET vNext</strike> ASP.NET 5 around the corner, I thought I had to look into it again and see if things will actually get better… So here goes!</p> <h2>Setting up a build agent is no longer a world of pain</h2> <p>There, the title says it all. For all .NET development we currently do, this world of pain will still be there. No way around it, you will want to commit random murders if you want to do builds targeting .NET 2.0 – .NET 4.5. A billion SDK’s all packaged in MSI’s that come with weird silent installs so you can not really script their setup, it will be there still. Reason for that is that dependencies we have are all informal: we build against some SDK, and assume it will be there. Our application does not define what it needs, so we have to provide the whole world on our build machines…</p> <p>But if we forget all that and focus just on ASP.NET 5 and the new runtime, this new world is bliss. What do we need on the build agent? A few things, still.</p> <ul> <li>An operating system (Windows, Linux and even Mac OS X will do the job)  <li>PowerShell, or any other shell like Bash  <li>Some form of .NET installed, for example mono</li></ul> <p>Sounds pretty standard out-of-the-box to me. So that’s all good! What else do we need installed permanently on the machine? Nothing! That’s right: NOTHING! Builds for ASP.NET 5 are self-contained and will make sure they can run anytime, anywhere. Every project specifies its dependencies, that will all be downloaded when needed so they are available to the build. Let’s see how builds now work…</p> <h2>How ASP.NET 5 projects work…</h2> <p>As an example for this post, I will use the <a href="https://github.com/aspnet/EntityFramework">Entity Framework repository on GitHub</a>, which is built against ASP.NET 5. When building a project in Visual Studio 2015, there will be <em>.sln</em> files that represent the solution, as well as new <em>.kproj</em> files that represent our project. For Visual Studio. That’s right: you can ignore these files, they are just so Visual Studio can figure out how it all fits together. “But that .kproj file is like a project file, it’s msbuild-like and I can add custom tasks in there!” – <em>Crack!</em> That was the sound of a whip on your fingers. Yes, you can, and the new project system actually adds some things in there to make building the project in Visual Studio work, but stay away from the <em>.kproj</em> files. Don’t touch them.</p> <p>The real project files are these: <em>global.json</em> and <em>project.json</em>. The first one, global.json, may look like this:</p> <div class="wlWriterEditableSmartContent" id="scid:9D7513F9-C04C-4721-824A-2B34F0212519:694aacc3-8b69-4db2-9463-2a286fb8960b" style="margin: 0px; padding: 0px; float: none; display: inline;"><pre style="width: 955px; height: 67px; overflow: auto; background-color: white;"><div><!--

Code highlighting produced by Actipro CodeHighlighter (freeware)
http://www.CodeHighlighter.com/

--><span style="color: rgb(0, 0, 0);">{
    </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">sources</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: [ </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">src</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);"> ]
}

</span></div></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>
<p>It defines the structure of our project, where we say that source code is in the folder named <em>src</em>. Multiple folders could be there, for example <em>src</em> and <em>test</em> so we can distinguish where which type of project is stored. For every project we want to make, we can create a folder under the sources folder and in there, add a project.json file. It could look like this:</p>
<div class="wlWriterEditableSmartContent" id="scid:9D7513F9-C04C-4721-824A-2B34F0212519:3036dc0a-702b-492d-83d7-cb169d962004" style="margin: 0px; padding: 0px; float: none; display: inline;"><pre style="width: 955px; height: 1408px; overflow: auto; background-color: white;"><div><!--

Code highlighting produced by Actipro CodeHighlighter (freeware)
http://www.CodeHighlighter.com/

--><span style="color: rgb(0, 0, 0);">{
    </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">version</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">7.0.0-*</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">,
    </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">description</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">:  </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">Entity Framework is Microsoft's recommended data access technology for new applications.</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">,
    </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">compilationOptions</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: {
        </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">warningsAsErrors</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 255);">true</span><span style="color: rgb(0, 0, 0);">
    },
    </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">dependencies</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: {
        </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">Ix-Async</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">1.2.3-beta</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">,
        </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">Microsoft.Framework.Logging</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">1.0.0-*</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">,
        </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">Microsoft.Framework.OptionsModel</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">1.0.0-*</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">,
        </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">Remotion.Linq</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">1.15.15</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">,
        </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">System.Collections.Immutable</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">1.1.32-beta</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">
    },
    </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">code</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: [ </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">**\\*.cs</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">, </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">..\\Shared\\*.cs</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);"> ],
    </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">frameworks</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: {
        </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">net45</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: {
            </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">frameworkAssemblies</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: {
                </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">System.Collections</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: { </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">version</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">""</span><span style="color: rgb(0, 0, 0);">, </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">type</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">build</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);"> },
                </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">System.Diagnostics.Debug</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: { </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">version</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">""</span><span style="color: rgb(0, 0, 0);">, </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">type</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">build</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);"> },
                </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">System.Diagnostics.Tools</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: { </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">version</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">""</span><span style="color: rgb(0, 0, 0);">, </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">type</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">build</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);"> },
                </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">System.Globalization</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: { </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">version</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">""</span><span style="color: rgb(0, 0, 0);">, </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">type</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">build</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);"> },
                </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">System.Linq</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: { </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">version</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">""</span><span style="color: rgb(0, 0, 0);">, </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">type</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">build</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);"> },
                </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">System.Linq.Expressions</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: { </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">version</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">""</span><span style="color: rgb(0, 0, 0);">, </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">type</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">build</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);"> },
                </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">System.Linq.Queryable</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: { </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">version</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">""</span><span style="color: rgb(0, 0, 0);">, </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">type</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">build</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);"> },
                </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">System.ObjectModel</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: { </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">version</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">""</span><span style="color: rgb(0, 0, 0);">, </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">type</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">build</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);"> },
                </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">System.Reflection</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: { </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">version</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">""</span><span style="color: rgb(0, 0, 0);">, </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">type</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">build</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);"> },
                </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">System.Reflection.Extensions</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: { </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">version</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">""</span><span style="color: rgb(0, 0, 0);">, </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">type</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">build</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);"> },
                </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">System.Resources.ResourceManager</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: { </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">version</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">""</span><span style="color: rgb(0, 0, 0);">, </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">type</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">build</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);"> },
                </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">System.Runtime</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: { </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">version</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">""</span><span style="color: rgb(0, 0, 0);">, </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">type</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">build</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);"> },
                </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">System.Runtime.Extensions</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: { </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">version</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">""</span><span style="color: rgb(0, 0, 0);">, </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">type</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">build</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);"> },
                </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">System.Runtime.InteropServices</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: { </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">version</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">""</span><span style="color: rgb(0, 0, 0);">, </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">type</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">build</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);"> },
                </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">System.Threading</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: { </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">version</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">""</span><span style="color: rgb(0, 0, 0);">, </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">type</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">build</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);"> }
            }
        },
        </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">aspnet50</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: {
            </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">frameworkAssemblies</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: {
                </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">System.Collections</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">""</span><span style="color: rgb(0, 0, 0);">,
                </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">System.Diagnostics.Debug</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">""</span><span style="color: rgb(0, 0, 0);">,
                </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">System.Diagnostics.Tools</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">""</span><span style="color: rgb(0, 0, 0);">,
                </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">System.Globalization</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">""</span><span style="color: rgb(0, 0, 0);">,
                </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">System.Linq</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">""</span><span style="color: rgb(0, 0, 0);">,
                </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">System.Linq.Expressions</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">""</span><span style="color: rgb(0, 0, 0);">,
                </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">System.Linq.Queryable</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">""</span><span style="color: rgb(0, 0, 0);">,
                </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">System.ObjectModel</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">""</span><span style="color: rgb(0, 0, 0);">,
                </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">System.Reflection</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">""</span><span style="color: rgb(0, 0, 0);">,
                </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">System.Reflection.Extensions</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">""</span><span style="color: rgb(0, 0, 0);">,
                </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">System.Resources.ResourceManager</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">""</span><span style="color: rgb(0, 0, 0);">,
                </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">System.Runtime</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">""</span><span style="color: rgb(0, 0, 0);">,
                </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">System.Runtime.Extensions</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">""</span><span style="color: rgb(0, 0, 0);">,
                </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">System.Runtime.InteropServices</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">""</span><span style="color: rgb(0, 0, 0);">,
                </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">System.Threading</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">""</span><span style="color: rgb(0, 0, 0);">
            }
        },
        </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">aspnetcore50</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: {
            </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">dependencies</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: {
                </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">System.Diagnostics.Contracts</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">4.0.0-beta-*</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">,
                </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">System.Linq.Queryable</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">4.0.0-beta-*</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">,
                </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">System.ObjectModel</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">4.0.10-beta-*</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">,
                </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">System.Reflection.Extensions</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">: </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">4.0.0-beta-*</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">
            }
        }
    }
}

</span></div></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>
<p>Whoa! My eyes! Well, it’s not so bad. A couple of things are in here:</p>
<ul>
<li>The version of our project (yes, we have to version properly, woohoo!) 
<li>A description (as I have been preaching a long time: every project is now a package!) 
<li>Where is our source code stored? II n this case, all .cs files in all folders and some in a shared folder one level up. 
<li>Dependencies of our project. These are identifiers of other packages, that will either be searched for on NuGet, or on the filesystem. Since every project is a package, there is no difference between a project or a NuGet package. During development, you can depend on a project. When released, you can depend on a package. Convenient! 
<li>The frameworks supported and the framework components we require.</li>
</ul>
<p>That’s the project system. These are not all supported elements, <a href="https://github.com/aspnet/Home/wiki/Project.json-file">there are more</a>. But generally speaking: our project now defines what it needs. One I like is the option to <a href="https://github.com/aspnet/Home/wiki/Project.json-file#scripts">run scripts at various stages</a> of the project’s lifecycle and build lifecycle, such as restoring npm or bower packages. SLight thorn in my eye there is that the examples out there all assume npm and bower are on the build machine. Yes, that’s a hidden dependency right there…</p>
<p>The good things?</p>
<ul>
<li>Everything is a package 
<li>Everything specifies their dependencies explicitly (well, almost everything) 
<li>It’s human readable and machine readable</li>
</ul>

<p>So let’s see what we would have to do if we want to automate a build of, say, the <a href="https://github.com/aspnet/EntityFramework">Entity Framework repository on GitHub</a>.</p>
<h2>Automated building of ASP.NET 5 projects</h2>
<p>This is going to be so dissappointing when you read it: to build Entity Framework, you run <em>build.cmd</em> (or <em>build.sh</em> on non-Windows OS). That’s it. It will compile everything into assemblies in NuGet packages, run tests and that’s it. But what does this <em>build.cmd</em> do, exactly? Let’s dissect it! Here’s the source code that’s in there at time of writing this blog post:</p>
<div class="wlWriterEditableSmartContent" id="scid:9D7513F9-C04C-4721-824A-2B34F0212519:3e3c274c-f233-4665-85ac-4627598b313f" style="margin: 0px; padding: 0px; float: none; display: inline;"><pre style="width: 955px; height: 707px; overflow: auto; background-color: white;"><div><!--

Code highlighting produced by Actipro CodeHighlighter (freeware)
http://www.CodeHighlighter.com/

--><span style="color: rgb(0, 0, 255);">@echo</span><span style="color: rgb(0, 0, 0);"> </span><span style="color: rgb(0, 0, 255);">off</span><span style="color: rgb(0, 0, 0);">
</span><span style="color: rgb(0, 0, 255);">cd</span><span style="color: rgb(0, 0, 0);"> %~dp0

</span><span style="color: rgb(0, 0, 255);">SETLOCAL</span><span style="color: rgb(0, 0, 0);">
</span><span style="color: rgb(0, 0, 255);">SET</span><span style="color: rgb(0, 0, 0);"> CACHED_NUGET</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);">%LocalAppData%</span><span style="color: rgb(0, 0, 0);">\</span><span style="color: rgb(0, 0, 0);">NuGet</span><span style="color: rgb(0, 0, 0);">\</span><span style="color: rgb(0, 0, 0);">NuGet</span><span style="color: rgb(0, 0, 0);">.</span><span style="color: rgb(0, 0, 0);">exe

</span><span style="color: rgb(0, 0, 255);">IF</span><span style="color: rgb(0, 0, 0);"> </span><span style="color: rgb(0, 0, 255);">EXIST</span><span style="color: rgb(0, 0, 0);"> %CACHED_NUGET% </span><span style="color: rgb(0, 0, 255);">goto</span><span style="color: rgb(0, 0, 0);"> copynuget
</span><span style="color: rgb(0, 0, 255);">echo</span><span style="color: rgb(0, 0, 0);"> Downloading latest version of NuGet</span><span style="color: rgb(0, 0, 0);">.</span><span style="color: rgb(0, 0, 0);">exe</span><span style="color: rgb(0, 0, 0);">...</span><span style="color: rgb(0, 0, 0);">
</span><span style="color: rgb(0, 0, 255);">IF</span><span style="color: rgb(0, 0, 0);"> </span><span style="color: rgb(0, 0, 255);">NOT</span><span style="color: rgb(0, 0, 0);"> </span><span style="color: rgb(0, 0, 255);">EXIST</span><span style="color: rgb(0, 0, 0);"> %LocalAppData%</span><span style="color: rgb(0, 0, 0);">\</span><span style="color: rgb(0, 0, 0);">NuGet </span><span style="color: rgb(0, 0, 255);">md</span><span style="color: rgb(0, 0, 0);"> %LocalAppData%</span><span style="color: rgb(0, 0, 0);">\</span><span style="color: rgb(0, 0, 0);">NuGet
@powershell -NoProfile -ExecutionPolicy unrestricted -</span><span style="color: rgb(0, 0, 255);">Command</span><span style="color: rgb(0, 0, 0);"> </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">$ProgressPreference = 'SilentlyContinue'; Invoke-WebRequest 'https://www.nuget.org/nuget.exe' -OutFile '%CACHED_NUGET%'</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">

</span><span style="color: rgb(128, 0, 0);">:copynuget</span><span style="color: rgb(0, 0, 0);">
</span><span style="color: rgb(0, 0, 255);">IF</span><span style="color: rgb(0, 0, 0);"> </span><span style="color: rgb(0, 0, 255);">EXIST</span><span style="color: rgb(0, 0, 0);"> </span><span style="color: rgb(0, 0, 0);">.</span><span style="color: rgb(0, 0, 0);">nuget</span><span style="color: rgb(0, 0, 0);">\</span><span style="color: rgb(0, 0, 0);">nuget</span><span style="color: rgb(0, 0, 0);">.</span><span style="color: rgb(0, 0, 0);">exe </span><span style="color: rgb(0, 0, 255);">goto</span><span style="color: rgb(0, 0, 0);"> </span><span style="color: rgb(0, 0, 255);">restore</span><span style="color: rgb(0, 0, 0);">
</span><span style="color: rgb(0, 0, 255);">md</span><span style="color: rgb(0, 0, 0);"> </span><span style="color: rgb(0, 0, 0);">.</span><span style="color: rgb(0, 0, 0);">nuget
</span><span style="color: rgb(0, 0, 255);">copy</span><span style="color: rgb(0, 0, 0);"> %CACHED_NUGET% </span><span style="color: rgb(0, 0, 0);">.</span><span style="color: rgb(0, 0, 0);">nuget</span><span style="color: rgb(0, 0, 0);">\</span><span style="color: rgb(0, 0, 0);">nuget</span><span style="color: rgb(0, 0, 0);">.</span><span style="color: rgb(0, 0, 0);">exe </span><span style="color: rgb(0, 0, 0);">&gt;</span><span style="color: rgb(0, 0, 0);"> nul

</span><span style="color: rgb(128, 0, 0);">:restore</span><span style="color: rgb(0, 0, 0);">
</span><span style="color: rgb(0, 0, 255);">IF</span><span style="color: rgb(0, 0, 0);"> </span><span style="color: rgb(0, 0, 255);">EXIST</span><span style="color: rgb(0, 0, 0);"> packages</span><span style="color: rgb(0, 0, 0);">\</span><span style="color: rgb(0, 0, 0);">KoreBuild </span><span style="color: rgb(0, 0, 255);">goto</span><span style="color: rgb(0, 0, 0);"> </span><span style="color: rgb(0, 0, 255);">run</span><span style="color: rgb(0, 0, 0);">
</span><span style="color: rgb(0, 0, 0);">.</span><span style="color: rgb(0, 0, 0);">nuget</span><span style="color: rgb(0, 0, 0);">\</span><span style="color: rgb(0, 0, 0);">NuGet</span><span style="color: rgb(0, 0, 0);">.</span><span style="color: rgb(0, 0, 0);">exe install KoreBuild -ExcludeVersion -o packages -nocache -pre
</span><span style="color: rgb(0, 0, 0);">.</span><span style="color: rgb(0, 0, 0);">nuget</span><span style="color: rgb(0, 0, 0);">\</span><span style="color: rgb(0, 0, 0);">NuGet</span><span style="color: rgb(0, 0, 0);">.</span><span style="color: rgb(0, 0, 0);">exe install Sake -version </span><span style="color: rgb(0, 0, 0);">0.2</span><span style="color: rgb(0, 0, 0);"> -o packages -ExcludeVersion

</span><span style="color: rgb(0, 0, 255);">IF</span><span style="color: rgb(0, 0, 0);"> </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">%SKIP_KRE_INSTALL%</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">==</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">1</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);"> </span><span style="color: rgb(0, 0, 255);">goto</span><span style="color: rgb(0, 0, 0);"> </span><span style="color: rgb(0, 0, 255);">run</span><span style="color: rgb(0, 0, 0);">
</span><span style="color: rgb(0, 0, 255);">CALL</span><span style="color: rgb(0, 0, 0);"> packages</span><span style="color: rgb(0, 0, 0);">\</span><span style="color: rgb(0, 0, 0);">KoreBuild</span><span style="color: rgb(0, 0, 0);">\</span><span style="color: rgb(0, 0, 0);">build</span><span style="color: rgb(0, 0, 0);">\</span><span style="color: rgb(0, 0, 0);">kvm upgrade -runtime CLR -x86
</span><span style="color: rgb(0, 0, 255);">CALL</span><span style="color: rgb(0, 0, 0);"> packages</span><span style="color: rgb(0, 0, 0);">\</span><span style="color: rgb(0, 0, 0);">KoreBuild</span><span style="color: rgb(0, 0, 0);">\</span><span style="color: rgb(0, 0, 0);">build</span><span style="color: rgb(0, 0, 0);">\</span><span style="color: rgb(0, 0, 0);">kvm install default -runtime CoreCLR -x86

</span><span style="color: rgb(128, 0, 0);">:run</span><span style="color: rgb(0, 0, 0);">
</span><span style="color: rgb(0, 0, 255);">CALL</span><span style="color: rgb(0, 0, 0);"> packages</span><span style="color: rgb(0, 0, 0);">\</span><span style="color: rgb(0, 0, 0);">KoreBuild</span><span style="color: rgb(0, 0, 0);">\</span><span style="color: rgb(0, 0, 0);">build</span><span style="color: rgb(0, 0, 0);">\</span><span style="color: rgb(0, 0, 0);">kvm </span><span style="color: rgb(0, 0, 255);">use</span><span style="color: rgb(0, 0, 0);"> default -runtime CLR -x86
packages</span><span style="color: rgb(0, 0, 0);">\</span><span style="color: rgb(0, 0, 0);">Sake</span><span style="color: rgb(0, 0, 0);">\</span><span style="color: rgb(0, 0, 0);">tools</span><span style="color: rgb(0, 0, 0);">\</span><span style="color: rgb(0, 0, 0);">Sake</span><span style="color: rgb(0, 0, 0);">.</span><span style="color: rgb(0, 0, 0);">exe -I packages</span><span style="color: rgb(0, 0, 0);">\</span><span style="color: rgb(0, 0, 0);">KoreBuild</span><span style="color: rgb(0, 0, 0);">\</span><span style="color: rgb(0, 0, 0);">build -f makefile</span><span style="color: rgb(0, 0, 0);">.</span><span style="color: rgb(0, 0, 0);">shade %*

</span></div></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>
<p>Did I ever mention my dream was to have fully self-contained builds? This is one. Here’s what happens:</p>
<ul>
<li>A NuGet.exe is required, if it’s found that one is reused, if not, it’s downloaded on the fly. 
<li>Using NuGet, 2 packages are installed (currently from <a href="https://www.myget.org/gallery/aspnetvnext">the alpha feed the ASP.NET team has on MyGet</a>, but I assume these will end up on <a href="http://www.nuget.org">NuGet.org</a> someday) 
<ul>
<li>KoreBuild 
<li>Sake</li>
</ul></li>

<li>The KoreBuild package contains a few things (go on, use <a href="http://npe.codeplex.com">NuGet Package Explorer</a> and see, I’ll wait) 
<ul>
<li>A <em>kvm.ps1</em>, which is the bootstrapper for the ASP.NET 5 runtime that installs a specific runtime version and <em>kpm</em>, the package manager. 
<li>A bunch of <em>.shade</em> files</li>
</ul></li>
<li>Using that<em> kvm.ps1</em>, the latest CoreCLR runtime is installed and activated 
<li><em>Sake.exe</em> is run from the Sake package</li>
</ul>
<p>Dissappointment, I can feel it! This file does botstrap having the CoreCLR runtime on the build machine, but how is the <em>actual</em> build performed? The answer lies in the<em> .shade</em> files from that KoreBuild package. A lot of information is there, but distilling it all, here’s how a build is done using Sake:</p>
<ul>
<li>All <em>bin</em> folders underneath the current directory are removed. Consider this the old-fashioned “clean” target in msbuild. 
<li>The <em>kpm restore</em> command is run from the folder where the <em>global.json</em> file is. This will ensure that all dependencies for all project files are downloaded and made available on the machine the build is running on. 
<li>In every folder containing a<em> project.json</em> file, the <em>kpm build</em> command is run, which compiles it all and generates a NuGet package for every project. 
<li>In every folder containing a<em> project.json</em> file where a <em>command</em> element is found that is named test, the <em>k test</em> command is run to execute unit tests</li>
</ul>
<p>This is a simplified version, as it also cleans and restores npm and bower, but you get the idea. A build is pretty easy now. KoreBuild and Sake do this, but we could also just run all steps in the same order to achieve a fully working build. So that’s what I did…</p>
<h2>Automated building of ASP.NET 5 projects with TeamCity</h2>
<p>To see if it all was true, I decided to try and automate things using TeamCity. Entity Framework would be to easy as that’s just calling build.bat. Which is awesome! </p>
<p>I crafted <a href="https://github.com/maartenba-demo/aspnet5-helloworld">a little project on GitHub</a> that has a website, a library project and a test project. The goal I set out was automating a build of all this using TeamCity, and then making sure tests are run and reported. On a clean build agent with no .NET SDK’s installed at all. I also decided to not use the Sake approach, to see if my theory about the build process was right.</p>
<p>So… Installing the runtime, running a clean, build and test, right? Here goes:</p>
<div class="wlWriterEditableSmartContent" id="scid:9D7513F9-C04C-4721-824A-2B34F0212519:0c2884dd-ff5a-44e5-8655-c724e389ad9a" style="margin: 0px; padding: 0px; float: none; display: inline;"><pre style="width: 955px; height: 361px; overflow: auto; background-color: white;"><div><!--

Code highlighting produced by Actipro CodeHighlighter (freeware)
http://www.CodeHighlighter.com/

--><span style="color: rgb(0, 0, 255);">@echo</span><span style="color: rgb(0, 0, 0);"> </span><span style="color: rgb(0, 0, 255);">off</span><span style="color: rgb(0, 0, 0);">
</span><span style="color: rgb(0, 0, 255);">cd</span><span style="color: rgb(0, 0, 0);"> %teamcity</span><span style="color: rgb(0, 0, 0);">.</span><span style="color: rgb(0, 0, 0);">build</span><span style="color: rgb(0, 0, 0);">.</span><span style="color: rgb(0, 0, 0);">workingDir%

</span><span style="color: rgb(0, 0, 255);">SETLOCAL</span><span style="color: rgb(0, 0, 0);">

</span><span style="color: rgb(0, 0, 255);">IF</span><span style="color: rgb(0, 0, 0);"> </span><span style="color: rgb(0, 0, 255);">EXIST</span><span style="color: rgb(0, 0, 0);"> packages</span><span style="color: rgb(0, 0, 0);">\</span><span style="color: rgb(0, 0, 0);">KoreBuild </span><span style="color: rgb(0, 0, 255);">goto</span><span style="color: rgb(0, 0, 0);"> </span><span style="color: rgb(0, 0, 255);">run</span><span style="color: rgb(0, 0, 0);">
%teamcity</span><span style="color: rgb(0, 0, 0);">.</span><span style="color: rgb(0, 0, 0);">tool</span><span style="color: rgb(0, 0, 0);">.</span><span style="color: rgb(0, 0, 0);">NuGet</span><span style="color: rgb(0, 0, 0);">.</span><span style="color: rgb(0, 0, 0);">CommandLine</span><span style="color: rgb(0, 0, 0);">.</span><span style="color: rgb(0, 0, 0);">DEFAULT</span><span style="color: rgb(0, 0, 0);">.</span><span style="color: rgb(0, 0, 0);">nupkg%</span><span style="color: rgb(0, 0, 0);">\</span><span style="color: rgb(0, 0, 0);">tools</span><span style="color: rgb(0, 0, 0);">\</span><span style="color: rgb(0, 0, 0);">nuget</span><span style="color: rgb(0, 0, 0);">.</span><span style="color: rgb(0, 0, 0);">exe install KoreBuild -ExcludeVersion -o packages -nocache -pre -Source https:</span><span style="color: rgb(0, 0, 0);">//</span><span style="color: rgb(0, 0, 0);">www</span><span style="color: rgb(0, 0, 0);">.</span><span style="color: rgb(0, 0, 0);">myget</span><span style="color: rgb(0, 0, 0);">.</span><span style="color: rgb(0, 0, 0);">org</span><span style="color: rgb(0, 0, 0);">/</span><span style="color: rgb(0, 0, 0);">F</span><span style="color: rgb(0, 0, 0);">/</span><span style="color: rgb(0, 0, 0);">aspnetvnext</span><span style="color: rgb(0, 0, 0);">/</span><span style="color: rgb(0, 0, 0);">api</span><span style="color: rgb(0, 0, 0);">/</span><span style="color: rgb(0, 0, 0);">v2

</span><span style="color: rgb(128, 0, 0);">:run</span><span style="color: rgb(0, 0, 0);">
</span><span style="color: rgb(0, 0, 255);">CALL</span><span style="color: rgb(0, 0, 0);"> packages</span><span style="color: rgb(0, 0, 0);">\</span><span style="color: rgb(0, 0, 0);">KoreBuild</span><span style="color: rgb(0, 0, 0);">\</span><span style="color: rgb(0, 0, 0);">build</span><span style="color: rgb(0, 0, 0);">\</span><span style="color: rgb(0, 0, 0);">kvm upgrade -runtime CLR -x86
</span><span style="color: rgb(0, 0, 255);">CALL</span><span style="color: rgb(0, 0, 0);"> packages</span><span style="color: rgb(0, 0, 0);">\</span><span style="color: rgb(0, 0, 0);">KoreBuild</span><span style="color: rgb(0, 0, 0);">\</span><span style="color: rgb(0, 0, 0);">build</span><span style="color: rgb(0, 0, 0);">\</span><span style="color: rgb(0, 0, 0);">kvm install default -runtime CoreCLR -x86
</span><span style="color: rgb(0, 0, 255);">CALL</span><span style="color: rgb(0, 0, 0);"> packages</span><span style="color: rgb(0, 0, 0);">\</span><span style="color: rgb(0, 0, 0);">KoreBuild</span><span style="color: rgb(0, 0, 0);">\</span><span style="color: rgb(0, 0, 0);">build</span><span style="color: rgb(0, 0, 0);">\</span><span style="color: rgb(0, 0, 0);">kvm </span><span style="color: rgb(0, 0, 255);">use</span><span style="color: rgb(0, 0, 0);"> default -runtime CLR -x86

</span><span style="color: rgb(128, 0, 0);">:clean</span><span style="color: rgb(0, 0, 0);">
@powershell -NoProfile -ExecutionPolicy unrestricted -</span><span style="color: rgb(0, 0, 255);">Command</span><span style="color: rgb(0, 0, 0);"> </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">Get-ChildItem %mr.SourceFolder% </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">bin</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);"> -Directory -rec -erroraction 'silentlycontinue' | Remove-Item -Recurse; exit $Lastexitcode</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">

</span><span style="color: rgb(128, 0, 0);">:restore</span><span style="color: rgb(0, 0, 0);">
@powershell -NoProfile -ExecutionPolicy unrestricted -</span><span style="color: rgb(0, 0, 255);">Command</span><span style="color: rgb(0, 0, 0);"> </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">Get-ChildItem %mr.SourceFolder% global.json -rec -erroraction 'silentlycontinue'  | Select-Object -Expand DirectoryName | Foreach { cmd /C cd $_ `&amp;`&amp; CALL kpm restore }; exit $Lastexitcode</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">

</span><span style="color: rgb(128, 0, 0);">:buildall</span><span style="color: rgb(0, 0, 0);">
@powershell -NoProfile -ExecutionPolicy unrestricted -</span><span style="color: rgb(0, 0, 255);">Command</span><span style="color: rgb(0, 0, 0);"> </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">Get-ChildItem %mr.SourceFolder% project.json -rec -erroraction 'silentlycontinue' | Foreach { kpm build $_.FullName --configuration %mr.Configuration% }; exit $Lastexitcode</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">
@powershell -NoProfile -ExecutionPolicy unrestricted -</span><span style="color: rgb(0, 0, 255);">Command</span><span style="color: rgb(0, 0, 0);"> </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">Get-ChildItem %mr.SourceFolder% *.nupkg -rec -erroraction 'silentlycontinue' | Where-Object {$_.FullName -match 'bin'} | Select-Object -Expand FullName | Foreach { Write-Host `#`#teamcity`[publishArtifacts `'$_`'`] }; exit $Lastexitcode</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">

</span><span style="color: rgb(128, 0, 0);">:testall</span><span style="color: rgb(0, 0, 0);">
@powershell -NoProfile -ExecutionPolicy unrestricted -</span><span style="color: rgb(0, 0, 255);">Command</span><span style="color: rgb(0, 0, 0);"> </span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">Get-ChildItem %mr.SourceFolder% project.json -rec -erroraction 'silentlycontinue' | Where-Object { $_.FullName -like '*test*' } | Select-Object -Expand DirectoryName | Foreach { cmd /C cd $_ `&amp;`&amp; k test -teamcity }; exit $Lastexitcode</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">
</span></div></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>
<p><em>(note: this may not be optimal, it’s as experimental as it gets, but it does the job – feel free to rewrite this in Ant or Maven to make it cross platform on TeamCity agents, too)</em></p>
<p>TeamCity will now run the build and provide us with the artifacts generated during build (all the NuGet packages), and expose them in the UI after each build:</p>
<p><a href="/images/image_347.png"><img width="644" height="297" title="Projeckt K ASP.NET vNext TeamCity" style="border-width: 0px; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;" alt="Projeckt K ASP.NET vNext TeamCity" src="/images/image_thumb_307.png" border="0"></a></p>
<p>Even better: since TeamCity has a built-in NuGet server, these packages now show up on that feed as well, allowing me to consume these in other projects:</p>
<p><a href="/images/image_348.png"><img width="644" height="348" title="NuGet feed in TeamCity for ASP.NET vNext" style="border-width: 0px; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;" alt="NuGet feed in TeamCity for ASP.NET vNext" src="/images/image_thumb_308.png" border="0"></a></p>
<p>Running tests was unexpected: it seems the ASP.NET 5 xUnit runner still uses TeamCity service messages and exposes results back to the server:</p>
<p><a href="/images/image_349.png"><img width="644" height="260" title="Test results from xUnit vNext in TeamCity" style="border-width: 0px; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;" alt="Test results from xUnit vNext in TeamCity" src="/images/image_thumb_309.png" border="0"></a></p>
<p>But how to set the build number, you ask? Well, turns out that this is coming from the <em>project.json</em>. The build umber in there is leading, but we can add a suffix by creating a <em>K_VERSION_NUMBER</em> environment variable. On TeamCity, we could use our build counter for it. Or run <a href="https://github.com/ParticularLabs/GitVersion">GitVersion</a> and use that as the version suffix.</p>
<p><a href="/images/image_350.png"><img width="644" height="375" title="TeamCity set ASP.NET 5 version number" style="border-width: 0px; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;" alt="TeamCity set ASP.NET 5 version number" src="/images/image_thumb_310.png" border="0"></a></p>
<p>Going a step further, running <em>kpm pack</em> even allows us to build our web applications and add the entire generated artifact to our build, ready for deployment:</p>
<p><a href="/images/image_351.png"><img width="644" height="439" title="ASP.NET 5 application build on TeamCity" style="border-width: 0px; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;" alt="ASP.NET 5 application build on TeamCity" src="/images/image_thumb_311.png" border="0"></a></p>
<p>Very, very nice! I’m liking where ASP.NET 5 is going, and forgetting everything that came before gives me high hopes for this incarnation.</p>
<h2></h2>
<h2></h2>
<p>
<h2>Conclusion</h2>
<p>This is really nice, and the way I dreamt it would all work. Everything is a package, and builds are self-contained. It’s all still in beta state, but it gives a great view of what we’ll soon all be doing. I hope a lot of projects will use the builds like the <a href="https://github.com/aspnet/EntityFramework">Entity Framework one</a>. having one or two build.bat files in there that do the entire thing. But even if not and you have a boilerplate VS2015 project, using the steps outlined in this blog post gets the job done. In fact, I created some <a href="https://github.com/maartenba/meta-runner-power-pack/tree/master/k">TeamCity meta runners</a> for you to enjoy (contributions welcome). How about adding one build step to your ASP.NET 5 builds in TeamCity…</p>
<p><a href="/images/image_352.png"><img width="644" height="287" title="TeamCity ASP.NET build by convention" style="border-width: 0px; padding-top: 0px; padding-right: 0px; padding-left: 0px; display: inline; background-image: none;" alt="TeamCity ASP.NET build by convention" src="/images/image_thumb_312.png" border="0"></a></p>
<p>Go <a href="https://github.com/maartenba/meta-runner-power-pack/tree/master/k">grab these meta runners now</a>! I have created quite a few:</p>
<ul>
<li>Install KRE 
<li>Convention-based build 
<li>Clean sources 
<li>Restore packages 
<li>Build one project 
<li>Build all projects 
<li>Test one project 
<li>Test all projects 
<li>Package application</li>
</ul>
<p>PS: Thanks <a href="http://www.twitter.com/techmike2kx">Mike</a> for helping me out with some PowerShell goodness!</p>

{% include imported_disclaimer.html %}

